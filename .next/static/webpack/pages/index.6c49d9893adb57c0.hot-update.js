"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./components/game/model.js":
/*!**********************************!*\
  !*** ./components/game/model.js ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   computeWinner: function() { return /* binding */ computeWinner; },\n/* harmony export */   getNextMove: function() { return /* binding */ getNextMove; }\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./components/game/constants.js\");\n\n//функция расчета состояния следующего хода на основании currentMove\nfunction getNextMove(currentMove, playersCount) {\n    const slicedMoveOrder = _constants__WEBPACK_IMPORTED_MODULE_0__.MOVE_ORDER.slice(0, playersCount);\n    const nextMoveIndex = slicedMoveOrder.indexOf(currentMove) + 1;\n    var _slicedMoveOrder_nextMoveIndex;\n    //если slicedMoveOrder[nextMoveIndex] > 3, надо установить индекс 0 (ходит опять \"крестик\")\n    return (_slicedMoveOrder_nextMoveIndex = slicedMoveOrder[nextMoveIndex]) !== null && _slicedMoveOrder_nextMoveIndex !== void 0 ? _slicedMoveOrder_nextMoveIndex : slicedMoveOrder[0];\n}\n//функция определения победителя\nfunction computeWinner(cells) {\n    let sequenceSize = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 5, fieldSize = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 5;\n    const gap = Math.floor(sequenceSize / 2);\n    function compareElementIndexes(indexes) {\n        let result = true;\n        for(let i1 = 1; i1 < indexes.length; i1++){\n            result && (result = !!cells[indexes[i1]]);\n            result && (result = cells[indexes[i1]] === cels[indexes[i1 - 1]]);\n        }\n        return result;\n    }\n    function getSequenceIndexes() {\n        const res = [\n            [],\n            [],\n            [],\n            [] // |\n        ];\n        for(let j = 0; j < sequenceSize; j++){\n            res[0].push(j - gap + i);\n            res[1].push(fieldSize * (j - gap) + (j - gap) + i);\n            res[2].push(-fieldSize * (j - gap) + (j - gap) + i);\n            res[3].push(fieldSize * (j - gap) + i);\n        }\n        return res;\n    }\n    for(let i1 = 0; i1 < cells.length; i1++){\n        if (cells[i1]) {\n            const indexRows = getSequenceIndexes(i1);\n            const winnerIndexes = indexRows.find((row)=>compareElementIndexes(row));\n            if (winnerIndexes) {\n                return winnerIndexes;\n            }\n        }\n    }\n    return undefined;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL2dhbWUvbW9kZWwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXlDO0FBRXpDLG9FQUFvRTtBQUM3RCxTQUFTQyxZQUFZQyxXQUFXLEVBQUVDLFlBQVk7SUFFcEQsTUFBTUMsa0JBQWtCSixrREFBVUEsQ0FBQ0ssS0FBSyxDQUFDLEdBQUdGO0lBRTVDLE1BQU1HLGdCQUFnQkYsZ0JBQWdCRyxPQUFPLENBQUNMLGVBQWU7UUFFdERFO0lBRFAsMkZBQTJGO0lBQzNGLE9BQU9BLENBQUFBLGlDQUFBQSxlQUFlLENBQUNFLGNBQWMsY0FBOUJGLDRDQUFBQSxpQ0FBa0NBLGVBQWUsQ0FBQyxFQUFFO0FBQzVEO0FBRUEsZ0NBQWdDO0FBQ3pCLFNBQVNJLGNBQWNDLEtBQUs7UUFBRUMsZUFBQUEsaUVBQWUsR0FBR0MsWUFBQUEsaUVBQVk7SUFFbEUsTUFBTUMsTUFBTUMsS0FBS0MsS0FBSyxDQUFDSixlQUFlO0lBRXRDLFNBQVNLLHNCQUFzQkMsT0FBTztRQUNyQyxJQUFJQyxTQUFTO1FBRWIsSUFBSyxJQUFJQyxLQUFJLEdBQUdBLEtBQUlGLFFBQVFHLE1BQU0sRUFBRUQsS0FBSztZQUN4Q0QsV0FBQUEsU0FBVyxDQUFDLENBQUNSLEtBQUssQ0FBQ08sT0FBTyxDQUFDRSxHQUFFLENBQUM7WUFDOUJELFdBQUFBLFNBQVdSLEtBQUssQ0FBQ08sT0FBTyxDQUFDRSxHQUFFLENBQUMsS0FBS0UsSUFBSSxDQUFDSixPQUFPLENBQUNFLEtBQUksRUFBRSxDQUFDO1FBQ3REO1FBQ0EsT0FBT0Q7SUFDUjtJQUVBLFNBQVNJO1FBQ1IsTUFBTUMsTUFBTTtZQUNYLEVBQUU7WUFDRixFQUFFO1lBQ0YsRUFBRTtZQUNGLEVBQUUsQ0FBQyxJQUFJO1NBQ1A7UUFFRCxJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSWIsY0FBY2EsSUFBSztZQUN0Q0QsR0FBRyxDQUFDLEVBQUUsQ0FBQ0UsSUFBSSxDQUFDRCxJQUFJWCxNQUFNTTtZQUN0QkksR0FBRyxDQUFDLEVBQUUsQ0FBQ0UsSUFBSSxDQUFDYixZQUFhWSxDQUFBQSxJQUFJWCxHQUFFLElBQU1XLENBQUFBLElBQUlYLEdBQUUsSUFBS007WUFDaERJLEdBQUcsQ0FBQyxFQUFFLENBQUNFLElBQUksQ0FBQyxDQUFDYixZQUFhWSxDQUFBQSxJQUFJWCxHQUFFLElBQU1XLENBQUFBLElBQUlYLEdBQUUsSUFBS007WUFDakRJLEdBQUcsQ0FBQyxFQUFFLENBQUNFLElBQUksQ0FBQ2IsWUFBYVksQ0FBQUEsSUFBSVgsR0FBRSxJQUFLTTtRQUNyQztRQUNBLE9BQU9JO0lBQ1I7SUFFQSxJQUFLLElBQUlKLEtBQUksR0FBR0EsS0FBSVQsTUFBTVUsTUFBTSxFQUFFRCxLQUFLO1FBQ3RDLElBQUdULEtBQUssQ0FBQ1MsR0FBRSxFQUFFO1lBQ1osTUFBTU8sWUFBWUosbUJBQW1CSDtZQUNyQyxNQUFNUSxnQkFBZ0JELFVBQVVFLElBQUksQ0FBQ0MsQ0FBQUEsTUFBT2Isc0JBQXNCYTtZQUVsRSxJQUFHRixlQUFlO2dCQUNqQixPQUFPQTtZQUNSO1FBQ0Q7SUFDRDtJQUNBLE9BQU9HO0FBQ1IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9nYW1lL21vZGVsLmpzP2U0ZmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTU9WRV9PUkRFUiB9IGZyb20gJy4vY29uc3RhbnRzJztcclxuXHJcbi8v0YTRg9C90LrRhtC40Y8g0YDQsNGB0YfQtdGC0LAg0YHQvtGB0YLQvtGP0L3QuNGPINGB0LvQtdC00YPRjtGJ0LXQs9C+INGF0L7QtNCwINC90LAg0L7RgdC90L7QstCw0L3QuNC4IGN1cnJlbnRNb3ZlXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXROZXh0TW92ZShjdXJyZW50TW92ZSwgcGxheWVyc0NvdW50KSB7XHJcblxyXG5cdGNvbnN0IHNsaWNlZE1vdmVPcmRlciA9IE1PVkVfT1JERVIuc2xpY2UoMCwgcGxheWVyc0NvdW50KTtcclxuXHJcblx0Y29uc3QgbmV4dE1vdmVJbmRleCA9IHNsaWNlZE1vdmVPcmRlci5pbmRleE9mKGN1cnJlbnRNb3ZlKSArIDFcclxuXHQvL9C10YHQu9C4IHNsaWNlZE1vdmVPcmRlcltuZXh0TW92ZUluZGV4XSA+IDMsINC90LDQtNC+INGD0YHRgtCw0L3QvtCy0LjRgtGMINC40L3QtNC10LrRgSAwICjRhdC+0LTQuNGCINC+0L/Rj9GC0YwgXCLQutGA0LXRgdGC0LjQulwiKVxyXG5cdHJldHVybiBzbGljZWRNb3ZlT3JkZXJbbmV4dE1vdmVJbmRleF0gPz8gc2xpY2VkTW92ZU9yZGVyWzBdO1xyXG59XHJcblxyXG4vL9GE0YPQvdC60YbQuNGPINC+0L/RgNC10LTQtdC70LXQvdC40Y8g0L/QvtCx0LXQtNC40YLQtdC70Y9cclxuZXhwb3J0IGZ1bmN0aW9uIGNvbXB1dGVXaW5uZXIoY2VsbHMsIHNlcXVlbmNlU2l6ZSA9IDUsIGZpZWxkU2l6ZSA9IDUpIHtcclxuXHJcblx0Y29uc3QgZ2FwID0gTWF0aC5mbG9vcihzZXF1ZW5jZVNpemUgLyAyKTtcclxuXHJcblx0ZnVuY3Rpb24gY29tcGFyZUVsZW1lbnRJbmRleGVzKGluZGV4ZXMpIHtcclxuXHRcdGxldCByZXN1bHQgPSB0cnVlO1xyXG5cclxuXHRcdGZvciAobGV0IGkgPSAxOyBpIDwgaW5kZXhlcy5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHRyZXN1bHQgJiY9ICEhY2VsbHNbaW5kZXhlc1tpXV07XHJcblx0XHRcdHJlc3VsdCAmJj0gY2VsbHNbaW5kZXhlc1tpXV0gPT09IGNlbHNbaW5kZXhlc1tpIC0gMV1dO1xyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIHJlc3VsdDtcclxuXHR9XHJcblxyXG5cdGZ1bmN0aW9uIGdldFNlcXVlbmNlSW5kZXhlcygpIHtcclxuXHRcdGNvbnN0IHJlcyA9IFtcclxuXHRcdFx0W10sIC8vIC1cclxuXHRcdFx0W10sIC8vIFxcXHJcblx0XHRcdFtdLCAvLyAvXHJcblx0XHRcdFtdIC8vIHxcclxuXHRcdF07XHJcblxyXG5cdFx0Zm9yIChsZXQgaiA9IDA7IGogPCBzZXF1ZW5jZVNpemU7IGorKykge1xyXG5cdFx0XHRyZXNbMF0ucHVzaChqIC0gZ2FwICsgaSk7XHJcblx0XHRcdHJlc1sxXS5wdXNoKGZpZWxkU2l6ZSAqIChqIC0gZ2FwKSArIChqIC0gZ2FwKSArIGkpO1xyXG5cdFx0XHRyZXNbMl0ucHVzaCgtZmllbGRTaXplICogKGogLSBnYXApICsgKGogLSBnYXApICsgaSk7XHJcblx0XHRcdHJlc1szXS5wdXNoKGZpZWxkU2l6ZSAqIChqIC0gZ2FwKSArIGkpO1xyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIHJlcztcclxuXHR9XHJcblxyXG5cdGZvciAobGV0IGkgPSAwOyBpIDwgY2VsbHMubGVuZ3RoOyBpKyspIHtcclxuXHRcdGlmKGNlbGxzW2ldKSB7XHJcblx0XHRcdGNvbnN0IGluZGV4Um93cyA9IGdldFNlcXVlbmNlSW5kZXhlcyhpKTtcclxuXHRcdFx0Y29uc3Qgd2lubmVySW5kZXhlcyA9IGluZGV4Um93cy5maW5kKHJvdyA9PiBjb21wYXJlRWxlbWVudEluZGV4ZXMocm93KSk7XHJcblxyXG5cdFx0XHRpZih3aW5uZXJJbmRleGVzKSB7XHJcblx0XHRcdFx0cmV0dXJuIHdpbm5lckluZGV4ZXM7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcblx0cmV0dXJuIHVuZGVmaW5lZDtcclxufVxyXG5cclxuIl0sIm5hbWVzIjpbIk1PVkVfT1JERVIiLCJnZXROZXh0TW92ZSIsImN1cnJlbnRNb3ZlIiwicGxheWVyc0NvdW50Iiwic2xpY2VkTW92ZU9yZGVyIiwic2xpY2UiLCJuZXh0TW92ZUluZGV4IiwiaW5kZXhPZiIsImNvbXB1dGVXaW5uZXIiLCJjZWxscyIsInNlcXVlbmNlU2l6ZSIsImZpZWxkU2l6ZSIsImdhcCIsIk1hdGgiLCJmbG9vciIsImNvbXBhcmVFbGVtZW50SW5kZXhlcyIsImluZGV4ZXMiLCJyZXN1bHQiLCJpIiwibGVuZ3RoIiwiY2VscyIsImdldFNlcXVlbmNlSW5kZXhlcyIsInJlcyIsImoiLCJwdXNoIiwiaW5kZXhSb3dzIiwid2lubmVySW5kZXhlcyIsImZpbmQiLCJyb3ciLCJ1bmRlZmluZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/game/model.js\n"));

/***/ }),

/***/ "./components/game/use-game-state.js":
/*!*******************************************!*\
  !*** ./components/game/use-game-state.js ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useGameState: function() { return /* binding */ useGameState; }\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./components/game/constants.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./model */ \"./components/game/model.js\");\nvar _s = $RefreshSig$();\n\n\n\n//кастомный хук\nfunction useGameState(playersCount) {\n    _s();\n    //СОСТОЯНИЯ\t\n    //объединенное состояние: состояние игрового поля, состояние какой текущий ход \n    //начальное значение useState - отрисовываем один раз пустое игровое поле (массив клеточек 19х19) при первоначальном рендере компонента\n    const [{ cells, currentMove }, setGameState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(()=>({\n            cells: new Array(19 * 19).fill(null),\n            currentMove: _constants__WEBPACK_IMPORTED_MODULE_0__.GAME_SYMBOLS.CROSS\n        }));\n    const winnerSequence = (0,_model__WEBPACK_IMPORTED_MODULE_2__.computeWinner)(cells);\n    //состояние какой следующий ход. Не заводим копию состояния currentMove, а расчитываем прямо при рендере.\n    const nextMove = getNextMove(currentMove, playersCount);\n    //обработчик клика по клетке (хода)\n    const handleCellClick = (index)=>{\n        setGameState((lastGameState)=>{\n            if (lastGameState.cells[index]) {\n                return lastGameState;\n            }\n            return {\n                ...lastGameState,\n                currentMove: getNextMove(lastGameState.currentMove, playersCount),\n                cells: lastGameState.cells.map((cell, i)=>i === index ? lastGameState.currentMove : cell)\n            };\n        });\n    };\n    return {\n        cells,\n        currentMove,\n        nextMove,\n        handleCellClick,\n        winnerSequence\n    };\n}\n_s(useGameState, \"U1Tm7hX355ctsX6ckaljSZQX4b8=\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL2dhbWUvdXNlLWdhbWUtc3RhdGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTJDO0FBQ1Y7QUFDTztBQUV4QyxlQUFlO0FBQ1IsU0FBU0csYUFBYUMsWUFBWTs7SUFDekMsWUFBWTtJQUNYLCtFQUErRTtJQUMvRSx1SUFBdUk7SUFDdkksTUFBTSxDQUFDLEVBQUNDLEtBQUssRUFBRUMsV0FBVyxFQUFDLEVBQUVDLGFBQWEsR0FBR04sK0NBQVFBLENBQUMsSUFBTztZQUM1REksT0FBTyxJQUFJRyxNQUFNLEtBQUssSUFBSUMsSUFBSSxDQUFDO1lBQy9CSCxhQUFhTixvREFBWUEsQ0FBQ1UsS0FBSztRQUNoQztJQUVBLE1BQU1DLGlCQUFpQlQscURBQWFBLENBQUNHO0lBQ3JDLHlHQUF5RztJQUN6RyxNQUFNTyxXQUFXQyxZQUFZUCxhQUFhRjtJQUUxQyxtQ0FBbUM7SUFDbkMsTUFBTVUsa0JBQWtCLENBQUNDO1FBQ3hCUixhQUFhLENBQUNTO1lBRWIsSUFBR0EsY0FBY1gsS0FBSyxDQUFDVSxNQUFNLEVBQUM7Z0JBQzdCLE9BQU9DO1lBQ1I7WUFFQSxPQUFPO2dCQUNOLEdBQUdBLGFBQWE7Z0JBQ2hCVixhQUFhTyxZQUFZRyxjQUFjVixXQUFXLEVBQUVGO2dCQUNwREMsT0FBT1csY0FBY1gsS0FBSyxDQUFDWSxHQUFHLENBQUMsQ0FBQ0MsTUFBTUMsSUFBTUEsTUFBTUosUUFBUUMsY0FBY1YsV0FBVyxHQUFHWTtZQUV4RjtRQUNBO0lBQ0Q7SUFFQSxPQUFNO1FBQ0xiO1FBQ0FDO1FBQ0FNO1FBQ0FFO1FBQ0FIO0lBQ0Q7QUFDRDtHQXJDZ0JSIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvZ2FtZS91c2UtZ2FtZS1zdGF0ZS5qcz8xMTAyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdBTUVfU1lNQk9MUyB9IGZyb20gJy4vY29uc3RhbnRzJztcclxuaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IGNvbXB1dGVXaW5uZXIgfSBmcm9tICcuL21vZGVsJztcclxuXHJcbi8v0LrQsNGB0YLQvtC80L3Ri9C5INGF0YPQulxyXG5leHBvcnQgZnVuY3Rpb24gdXNlR2FtZVN0YXRlKHBsYXllcnNDb3VudCkge1xyXG4vL9Ch0J7QodCi0J7Qr9Cd0JjQr1x0XHJcblx0Ly/QvtCx0YrQtdC00LjQvdC10L3QvdC+0LUg0YHQvtGB0YLQvtGP0L3QuNC1OiDRgdC+0YHRgtC+0Y/QvdC40LUg0LjQs9GA0L7QstC+0LPQviDQv9C+0LvRjywg0YHQvtGB0YLQvtGP0L3QuNC1INC60LDQutC+0Lkg0YLQtdC60YPRidC40Lkg0YXQvtC0IFxyXG5cdC8v0L3QsNGH0LDQu9GM0L3QvtC1INC30L3QsNGH0LXQvdC40LUgdXNlU3RhdGUgLSDQvtGC0YDQuNGB0L7QstGL0LLQsNC10Lwg0L7QtNC40L0g0YDQsNC3INC/0YPRgdGC0L7QtSDQuNCz0YDQvtCy0L7QtSDQv9C+0LvQtSAo0LzQsNGB0YHQuNCyINC60LvQtdGC0L7Rh9C10LogMTnRhTE5KSDQv9GA0Lgg0L/QtdGA0LLQvtC90LDRh9Cw0LvRjNC90L7QvCDRgNC10L3QtNC10YDQtSDQutC+0LzQv9C+0L3QtdC90YLQsFxyXG5cdGNvbnN0IFt7Y2VsbHMsIGN1cnJlbnRNb3ZlfSwgc2V0R2FtZVN0YXRlXSA9IHVzZVN0YXRlKCgpID0+ICh7XHJcblx0XHRjZWxsczogbmV3IEFycmF5KDE5ICogMTkpLmZpbGwobnVsbCksXHJcblx0XHRjdXJyZW50TW92ZTogR0FNRV9TWU1CT0xTLkNST1NTXHJcblx0fSkpO1xyXG5cclxuXHRjb25zdCB3aW5uZXJTZXF1ZW5jZSA9IGNvbXB1dGVXaW5uZXIoY2VsbHMpO1xyXG5cdC8v0YHQvtGB0YLQvtGP0L3QuNC1INC60LDQutC+0Lkg0YHQu9C10LTRg9GO0YnQuNC5INGF0L7QtC4g0J3QtSDQt9Cw0LLQvtC00LjQvCDQutC+0L/QuNGOINGB0L7RgdGC0L7Rj9C90LjRjyBjdXJyZW50TW92ZSwg0LAg0YDQsNGB0YfQuNGC0YvQstCw0LXQvCDQv9GA0Y/QvNC+INC/0YDQuCDRgNC10L3QtNC10YDQtS5cclxuXHRjb25zdCBuZXh0TW92ZSA9IGdldE5leHRNb3ZlKGN1cnJlbnRNb3ZlLCBwbGF5ZXJzQ291bnQpO1xyXG5cclxuXHQvL9C+0LHRgNCw0LHQvtGC0YfQuNC6INC60LvQuNC60LAg0L/QviDQutC70LXRgtC60LUgKNGF0L7QtNCwKVxyXG5cdGNvbnN0IGhhbmRsZUNlbGxDbGljayA9IChpbmRleCkgPT4ge1xyXG5cdFx0c2V0R2FtZVN0YXRlKChsYXN0R2FtZVN0YXRlKSA9PiB7XHJcblxyXG5cdFx0XHRpZihsYXN0R2FtZVN0YXRlLmNlbGxzW2luZGV4XSl7XHJcblx0XHRcdFx0cmV0dXJuIGxhc3RHYW1lU3RhdGU7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdHJldHVybiB7XHJcblx0XHRcdFx0Li4ubGFzdEdhbWVTdGF0ZSxcclxuXHRcdFx0XHRjdXJyZW50TW92ZTogZ2V0TmV4dE1vdmUobGFzdEdhbWVTdGF0ZS5jdXJyZW50TW92ZSwgcGxheWVyc0NvdW50KSxcclxuXHRcdFx0XHRjZWxsczogbGFzdEdhbWVTdGF0ZS5jZWxscy5tYXAoKGNlbGwsIGkpID0+IGkgPT09IGluZGV4ID8gbGFzdEdhbWVTdGF0ZS5jdXJyZW50TW92ZSA6IGNlbGxcclxuXHRcdFx0KSxcclxuXHRcdH07XHJcblx0XHR9KTtcclxuXHR9O1xyXG5cclxuXHRyZXR1cm57XHJcblx0XHRjZWxscywgXHJcblx0XHRjdXJyZW50TW92ZSwgXHJcblx0XHRuZXh0TW92ZSwgXHJcblx0XHRoYW5kbGVDZWxsQ2xpY2ssIFxyXG5cdFx0d2lubmVyU2VxdWVuY2VcclxuXHR9XHJcbn0iXSwibmFtZXMiOlsiR0FNRV9TWU1CT0xTIiwidXNlU3RhdGUiLCJjb21wdXRlV2lubmVyIiwidXNlR2FtZVN0YXRlIiwicGxheWVyc0NvdW50IiwiY2VsbHMiLCJjdXJyZW50TW92ZSIsInNldEdhbWVTdGF0ZSIsIkFycmF5IiwiZmlsbCIsIkNST1NTIiwid2lubmVyU2VxdWVuY2UiLCJuZXh0TW92ZSIsImdldE5leHRNb3ZlIiwiaGFuZGxlQ2VsbENsaWNrIiwiaW5kZXgiLCJsYXN0R2FtZVN0YXRlIiwibWFwIiwiY2VsbCIsImkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/game/use-game-state.js\n"));

/***/ })

});