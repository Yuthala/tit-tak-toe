"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./components/game/use-game-state.js":
/*!*******************************************!*\
  !*** ./components/game/use-game-state.js ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useGameState: function() { return /* binding */ useGameState; }\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./components/game/constants.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\nvar _s = $RefreshSig$();\n\n\n//функция расчета состояния следующего хода на основании currentMove\nfunction getNextMove(currentMove, playersCount) {\n    const slicedMoveOrder = _constants__WEBPACK_IMPORTED_MODULE_0__.MOVE_ORDER.slice(0, playersCount);\n    const nextMoveIndex = slicedMoveOrder.indexOf(currentMove) + 1;\n    var _slicedMoveOrder_nextMoveIndex;\n    //если slicedMoveOrder[nextMoveIndex] > 3, надо установить индекс 0 (ходит опять \"крестик\")\n    return (_slicedMoveOrder_nextMoveIndex = slicedMoveOrder[nextMoveIndex]) !== null && _slicedMoveOrder_nextMoveIndex !== void 0 ? _slicedMoveOrder_nextMoveIndex : slicedMoveOrder[0];\n}\n//кастомный хук\nfunction useGameState(playersCount) {\n    _s();\n    //СОСТОЯНИЯ\t\n    //объединенное состояние: состояние игрового поля, состояние какой текущий ход \n    //начальное значение useState - отрисовываем один раз пустое игровое поле (массив клеточек 19х19) при первоначальном рендере компонента\n    const [{ cells, currentMove }, setGameState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(()=>({\n            cells: new Array(19 * 19).fill(null),\n            currentMove: _constants__WEBPACK_IMPORTED_MODULE_0__.GAME_SYMBOLS.CROSS\n        }));\n    //состояние какой следующий ход. Не заводим копию состояния currentMove, а расчитываем прямо при рендере.\n    const nextMove = getNextMove(currentMove, playersCount);\n    //обработчик клика по клетке (хода)\n    const handleCellClick = (index)=>{\n        setGameState((lastGameState)=>{\n            if (lastGameState.cells[index]) {\n                return lastGameState;\n            }\n            return {\n                ...lastGameState,\n                currentMove: getNextMove(lastGameState.currentMove, playersCount),\n                cells: lastGameState.cells.map((cell, i)=>i === index ? lastGameState.currentMove : cell)\n            };\n        });\n    };\n    return {\n        cells,\n        currentMove,\n        nextMove,\n        handleCellClick\n    };\n}\n_s(useGameState, \"U1Tm7hX355ctsX6ckaljSZQX4b8=\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL2dhbWUvdXNlLWdhbWUtc3RhdGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBdUQ7QUFDdEI7QUFFakMsb0VBQW9FO0FBQ3BFLFNBQVNHLFlBQVlDLFdBQVcsRUFBRUMsWUFBWTtJQUU3QyxNQUFNQyxrQkFBa0JOLGtEQUFVQSxDQUFDTyxLQUFLLENBQUMsR0FBR0Y7SUFFNUMsTUFBTUcsZ0JBQWdCRixnQkFBZ0JHLE9BQU8sQ0FBQ0wsZUFBZTtRQUV0REU7SUFEUCwyRkFBMkY7SUFDM0YsT0FBT0EsQ0FBQUEsaUNBQUFBLGVBQWUsQ0FBQ0UsY0FBYyxjQUE5QkYsNENBQUFBLGlDQUFrQ0EsZUFBZSxDQUFDLEVBQUU7QUFDNUQ7QUFFQSxlQUFlO0FBQ1IsU0FBU0ksYUFBYUwsWUFBWTs7SUFDekMsWUFBWTtJQUNYLCtFQUErRTtJQUMvRSx1SUFBdUk7SUFDdkksTUFBTSxDQUFDLEVBQUNNLEtBQUssRUFBRVAsV0FBVyxFQUFDLEVBQUVRLGFBQWEsR0FBR1YsK0NBQVFBLENBQUMsSUFBTztZQUM1RFMsT0FBTyxJQUFJRSxNQUFNLEtBQUssSUFBSUMsSUFBSSxDQUFDO1lBQy9CVixhQUFhSCxvREFBWUEsQ0FBQ2MsS0FBSztRQUNoQztJQUVBLHlHQUF5RztJQUN6RyxNQUFNQyxXQUFXYixZQUFZQyxhQUFhQztJQUUxQyxtQ0FBbUM7SUFDbkMsTUFBTVksa0JBQWtCLENBQUNDO1FBQ3hCTixhQUFhLENBQUNPO1lBRWIsSUFBR0EsY0FBY1IsS0FBSyxDQUFDTyxNQUFNLEVBQUM7Z0JBQzdCLE9BQU9DO1lBQ1I7WUFFQSxPQUFPO2dCQUNOLEdBQUdBLGFBQWE7Z0JBQ2hCZixhQUFhRCxZQUFZZ0IsY0FBY2YsV0FBVyxFQUFFQztnQkFDcERNLE9BQU9RLGNBQWNSLEtBQUssQ0FBQ1MsR0FBRyxDQUFDLENBQUNDLE1BQU1DLElBQU1BLE1BQU1KLFFBQVFDLGNBQWNmLFdBQVcsR0FBR2lCO1lBRXhGO1FBQ0E7SUFDRDtJQUVBLE9BQU07UUFDTFY7UUFDQVA7UUFDQVk7UUFDQUM7SUFDRDtBQUNEO0dBbkNnQlAiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9nYW1lL3VzZS1nYW1lLXN0YXRlLmpzPzExMDIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTU9WRV9PUkRFUiwgR0FNRV9TWU1CT0xTIH0gZnJvbSAnLi9jb25zdGFudHMnO1xyXG5pbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcclxuXHJcbi8v0YTRg9C90LrRhtC40Y8g0YDQsNGB0YfQtdGC0LAg0YHQvtGB0YLQvtGP0L3QuNGPINGB0LvQtdC00YPRjtGJ0LXQs9C+INGF0L7QtNCwINC90LAg0L7RgdC90L7QstCw0L3QuNC4IGN1cnJlbnRNb3ZlXHJcbmZ1bmN0aW9uIGdldE5leHRNb3ZlKGN1cnJlbnRNb3ZlLCBwbGF5ZXJzQ291bnQpIHtcclxuXHJcblx0Y29uc3Qgc2xpY2VkTW92ZU9yZGVyID0gTU9WRV9PUkRFUi5zbGljZSgwLCBwbGF5ZXJzQ291bnQpO1xyXG5cclxuXHRjb25zdCBuZXh0TW92ZUluZGV4ID0gc2xpY2VkTW92ZU9yZGVyLmluZGV4T2YoY3VycmVudE1vdmUpICsgMVxyXG5cdC8v0LXRgdC70Lggc2xpY2VkTW92ZU9yZGVyW25leHRNb3ZlSW5kZXhdID4gMywg0L3QsNC00L4g0YPRgdGC0LDQvdC+0LLQuNGC0Ywg0LjQvdC00LXQutGBIDAgKNGF0L7QtNC40YIg0L7Qv9GP0YLRjCBcItC60YDQtdGB0YLQuNC6XCIpXHJcblx0cmV0dXJuIHNsaWNlZE1vdmVPcmRlcltuZXh0TW92ZUluZGV4XSA/PyBzbGljZWRNb3ZlT3JkZXJbMF07XHJcbn1cclxuXHJcbi8v0LrQsNGB0YLQvtC80L3Ri9C5INGF0YPQulxyXG5leHBvcnQgZnVuY3Rpb24gdXNlR2FtZVN0YXRlKHBsYXllcnNDb3VudCkge1xyXG4vL9Ch0J7QodCi0J7Qr9Cd0JjQr1x0XHJcblx0Ly/QvtCx0YrQtdC00LjQvdC10L3QvdC+0LUg0YHQvtGB0YLQvtGP0L3QuNC1OiDRgdC+0YHRgtC+0Y/QvdC40LUg0LjQs9GA0L7QstC+0LPQviDQv9C+0LvRjywg0YHQvtGB0YLQvtGP0L3QuNC1INC60LDQutC+0Lkg0YLQtdC60YPRidC40Lkg0YXQvtC0IFxyXG5cdC8v0L3QsNGH0LDQu9GM0L3QvtC1INC30L3QsNGH0LXQvdC40LUgdXNlU3RhdGUgLSDQvtGC0YDQuNGB0L7QstGL0LLQsNC10Lwg0L7QtNC40L0g0YDQsNC3INC/0YPRgdGC0L7QtSDQuNCz0YDQvtCy0L7QtSDQv9C+0LvQtSAo0LzQsNGB0YHQuNCyINC60LvQtdGC0L7Rh9C10LogMTnRhTE5KSDQv9GA0Lgg0L/QtdGA0LLQvtC90LDRh9Cw0LvRjNC90L7QvCDRgNC10L3QtNC10YDQtSDQutC+0LzQv9C+0L3QtdC90YLQsFxyXG5cdGNvbnN0IFt7Y2VsbHMsIGN1cnJlbnRNb3ZlfSwgc2V0R2FtZVN0YXRlXSA9IHVzZVN0YXRlKCgpID0+ICh7XHJcblx0XHRjZWxsczogbmV3IEFycmF5KDE5ICogMTkpLmZpbGwobnVsbCksXHJcblx0XHRjdXJyZW50TW92ZTogR0FNRV9TWU1CT0xTLkNST1NTXHJcblx0fSkpO1xyXG5cclxuXHQvL9GB0L7RgdGC0L7Rj9C90LjQtSDQutCw0LrQvtC5INGB0LvQtdC00YPRjtGJ0LjQuSDRhdC+0LQuINCd0LUg0LfQsNCy0L7QtNC40Lwg0LrQvtC/0LjRjiDRgdC+0YHRgtC+0Y/QvdC40Y8gY3VycmVudE1vdmUsINCwINGA0LDRgdGH0LjRgtGL0LLQsNC10Lwg0L/RgNGP0LzQviDQv9GA0Lgg0YDQtdC90LTQtdGA0LUuXHJcblx0Y29uc3QgbmV4dE1vdmUgPSBnZXROZXh0TW92ZShjdXJyZW50TW92ZSwgcGxheWVyc0NvdW50KTtcclxuXHJcblx0Ly/QvtCx0YDQsNCx0L7RgtGH0LjQuiDQutC70LjQutCwINC/0L4g0LrQu9C10YLQutC1ICjRhdC+0LTQsClcclxuXHRjb25zdCBoYW5kbGVDZWxsQ2xpY2sgPSAoaW5kZXgpID0+IHtcclxuXHRcdHNldEdhbWVTdGF0ZSgobGFzdEdhbWVTdGF0ZSkgPT4ge1xyXG5cclxuXHRcdFx0aWYobGFzdEdhbWVTdGF0ZS5jZWxsc1tpbmRleF0pe1xyXG5cdFx0XHRcdHJldHVybiBsYXN0R2FtZVN0YXRlO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRyZXR1cm4ge1xyXG5cdFx0XHRcdC4uLmxhc3RHYW1lU3RhdGUsXHJcblx0XHRcdFx0Y3VycmVudE1vdmU6IGdldE5leHRNb3ZlKGxhc3RHYW1lU3RhdGUuY3VycmVudE1vdmUsIHBsYXllcnNDb3VudCksXHJcblx0XHRcdFx0Y2VsbHM6IGxhc3RHYW1lU3RhdGUuY2VsbHMubWFwKChjZWxsLCBpKSA9PiBpID09PSBpbmRleCA/IGxhc3RHYW1lU3RhdGUuY3VycmVudE1vdmUgOiBjZWxsXHJcblx0XHRcdCksXHJcblx0XHR9O1xyXG5cdFx0fSk7XHJcblx0fTtcclxuXHJcblx0cmV0dXJue1xyXG5cdFx0Y2VsbHMsIFxyXG5cdFx0Y3VycmVudE1vdmUsIFxyXG5cdFx0bmV4dE1vdmUsIFxyXG5cdFx0aGFuZGxlQ2VsbENsaWNrXHJcblx0fVxyXG59Il0sIm5hbWVzIjpbIk1PVkVfT1JERVIiLCJHQU1FX1NZTUJPTFMiLCJ1c2VTdGF0ZSIsImdldE5leHRNb3ZlIiwiY3VycmVudE1vdmUiLCJwbGF5ZXJzQ291bnQiLCJzbGljZWRNb3ZlT3JkZXIiLCJzbGljZSIsIm5leHRNb3ZlSW5kZXgiLCJpbmRleE9mIiwidXNlR2FtZVN0YXRlIiwiY2VsbHMiLCJzZXRHYW1lU3RhdGUiLCJBcnJheSIsImZpbGwiLCJDUk9TUyIsIm5leHRNb3ZlIiwiaGFuZGxlQ2VsbENsaWNrIiwiaW5kZXgiLCJsYXN0R2FtZVN0YXRlIiwibWFwIiwiY2VsbCIsImkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/game/use-game-state.js\n"));

/***/ })

});